{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"classification","provenance":[],"collapsed_sections":[],"mount_file_id":"1lAkxb49-05lMJtbHPMkQVa_SaUSfY-Fo","authorship_tag":"ABX9TyNoV1OKeHNYdjqcXXLdqX8O"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"XpeqEBRVmo0I"},"source":["# 선형 분류\n","\n","# regression과 classification 의 공통점 => supervised learning, 기존에 데이터와 라벨, 타겟이 있다.\n","# regression은 출력 값이 연속적인 값\n","# classification은 0과 1사이의 어떤 값\n","\n","# cutoff는 자신이 정하는 값, 경계 값"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BD8JYXcznGm8","executionInfo":{"status":"ok","timestamp":1640585116485,"user_tz":-540,"elapsed":1168,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"bf62d094-908f-41a2-867d-fdb3fc310083"},"source":["from sklearn import  datasets\n","iris = datasets.load_iris()\n","print(list(iris.keys()))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['data', 'target', 'frame', 'target_names', 'DESCR', 'feature_names', 'filename', 'data_module']\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dTDnR6WWrfqh","executionInfo":{"status":"ok","timestamp":1640585116485,"user_tz":-540,"elapsed":10,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"117e582b-fb27-49f0-e0bf-603b771a843e"},"source":["x=iris['data'][:,3:] # 꽃잎의 너비 변수만 사용, \n","# : 을 뒤에 찍은 이유는 2차원 array 형태로 만들기 위해\n","y=(iris['target']==2).astype('int') # index 2번의 versicolor만 사용\n","\n","from sklearn.linear_model import LogisticRegression\n","log_reg = LogisticRegression()\n","log_reg.fit(x,y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"L6I1RNJKsu6C","executionInfo":{"status":"ok","timestamp":1640585116485,"user_tz":-540,"elapsed":9,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"8595c963-88ac-4336-d141-7b435cb3a1fa"},"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","x_new = np.linspace(0,3,1000).reshape(-1,1)\n","y_proba = log_reg.predict_proba(x_new)\n","plt.plot(x_new,y_proba[:,1], 'r-', label='iris-virginica')\n","plt.plot(x_new,y_proba[:,0], 'b-x', label='not iris-virginica')\n","plt.legend()\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l8WKxbP8tEPM","executionInfo":{"status":"ok","timestamp":1640585116486,"user_tz":-540,"elapsed":8,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"5ad16222-60da-40c0-9d89-009a36ad84e6"},"source":["x = iris['data'][:,(2,3)] # 꽃잎의 길이와 너비 변수를 사용\n","y = iris['target'] # 3개 모든 클래스 사용\n","\n","# C -> L2 규제화를 뜻함\n","softmax_reg = LogisticRegression(multi_class='multinomial',solver='lbfgs', C=10, random_state=2021)\n","softmax_reg.fit(x,y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=10, multi_class='multinomial', random_state=2021)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"u9fwq_m23iqb","executionInfo":{"status":"ok","timestamp":1640585116486,"user_tz":-540,"elapsed":6,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"aa946da8-74ad-403a-b6d2-61670beec8cb"},"source":["new_iris = [[5, 2]] # 꽃잎 길이=5, 너비 변수=2\n","prediction = softmax_reg.predict(new_iris)[0]\n","label = iris['target_names'].tolist()\n","print(label[prediction])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["virginica\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nsNUg0lq4FPq","executionInfo":{"status":"ok","timestamp":1640585116486,"user_tz":-540,"elapsed":5,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"e6b5206d-1b0b-44d4-ae81-c8c33970707b"},"source":["softmax_reg.predict_proba(new_iris)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[6.38014896e-07, 5.74929995e-02, 9.42506362e-01]])"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#SVM"],"metadata":{"id":"DFfE8OYKfw9r"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","from sklearn import datasets\n","from sklearn.pipeline import Pipeline # 한 번에 여러 가지를 쭉 수행할 수 있게\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.svm import LinearSVC\n","\n","iris = datasets.load_iris()\n","x = iris['data'][:,(2,3)] # 꽃잎 길이와 너비\n","y = (iris['target']==2).astype('int')\n","\n","svm_clf = Pipeline([\n","                    ('scaler', StandardScaler()),\n","                    ('linear_svc', LinearSVC(C=1,loss='hinge'))\n","])\n","\n","# 모델 훈련\n","svm_clf.fit(x,y)\n","\n","# 예측\n","new_iris = [[5.5,1.7]] # 길이 : 5.5cm , 너비 : 1.7\n","prediction = svm_clf.predict(new_iris)[0]\n","print(prediction) # 버지니카라고 하겠다"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0SlKY-Y8fxtT","executionInfo":{"status":"ok","timestamp":1640585647363,"user_tz":-540,"elapsed":3,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"874eeda1-c618-4a8e-e1fc-92d0281e2439"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n"]}]},{"cell_type":"code","source":["# 비선형 SVM 분류\n","import matplotlib.pyplot as plt\n","x = np.linspace(-3, 3, 10)\n","y = np.linspace(1, 1, 10)\n","plt.scatter(x,y)\n","plt.grid()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"D3QrwH2rgr40","executionInfo":{"status":"ok","timestamp":1640586398552,"user_tz":-540,"elapsed":450,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"1a6d9aaf-6833-46e4-ad5e-72c93dda8827"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXoAAAD4CAYAAADiry33AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAQt0lEQVR4nO3cf4xldXnH8fdHdlHCaLd1yQQW6tKEECkSZbZQa9Xd1spiGlctrRKr4o9siW5rk4pCiZBiqbTaplKMSuuGbrVMDCChdBtAmA2aiGUXkOWHS1cTy65EainUERIEn/4xd+1l3Pmx997h3v3yfiUnued8v+ec55mz85kz597ZVBWSpHY9b9gFSJKWlkEvSY0z6CWpcQa9JDXOoJekxi0bdgGzrVy5slavXt3z/j/60Y84/PDDB1fQkLTSB9jLqGqll1b6gP562bFjxw+q6oj9jY1c0K9evZrt27f3vP+2bdtYu3bt4Aoaklb6AHsZVa300kof0F8vSb4715iPbiSpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQsGfZLNSR5Ocs8c40lyaZLdSe5OcvKs8Rcl2ZPkskEVLUlavMXc0V8BrJ9n/HTguM6yEfjMrPGPAbf2UpwkqX8LBn1V3Qo8Ms+UDcCWmnEbsCLJkQBJJoBx4MZBFCtJOnCpqoUnJauB66vqxP2MXQ9cUlVf66zfDHwEuAO4Bfh94HXAmqraNMfxNzLz2wDj4+MTk5OTvfQCwPT0NGNjYz3vPypa6QPsZVS10ksrfUB/vaxbt25HVa3Z39iyvqqa3/uBrVW1J8m8E6vqcuBygDVr1tTatWt7Pum2bdvoZ/9R0UofYC+jqpVeWukDlq6XQQT9XuCYrvWjO9teCbw6yfuBMeDQJNNVde4AzilJWqRBBP11wKYkk8CpwGNV9RDw9n0TkpzFzKMbQ16SnmULBn2SK4G1wMoke4ALgeUAVfVZYCvwBmA38Djw7qUqVpJ04BYM+qo6c4HxAj6wwJwrmPmYpiTpWeZfxkpS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGLRj0STYneTjJPXOMJ8mlSXYnuTvJyZ3tL0/y9ST3dra/ddDFS5IWtpg7+iuA9fOMnw4c11k2Ap/pbH8ceGdV/XJn/79NsqL3UiVJvVi20ISqujXJ6nmmbAC2VFUBtyVZkeTIqnqg6xjfS/IwcATwaJ81S5IOwCCe0a8CHuxa39PZ9lNJTgEOBb49gPNJkg7Agnf0/UpyJPBPwLuq6idzzNnIzGMfxsfH2bZtW8/nm56e7mv/UdFKH2Avo6qVXlrpA5awl6pacAFWA/fMMfY54Myu9V3AkZ3XLwLuAM5YzHmqiomJierH1NRUX/uPilb6qLKXUdVKL630UdVfL8D2miNXB/Ho5jrgnZ1P3/wq8FhVPZTkUODLzDy/v2oA55Ek9WDBRzdJrgTWAiuT7AEuBJYDVNVnga3AG4DdzHzS5t2dXX8PeA3w4iRndbadVVV3DbB+SdICFvOpmzMXGC/gA/vZ/gXgC72XJkkaBP8yVpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxi0Y9Ek2J3k4yT1zjCfJpUl2J7k7ycldY+9K8h+d5V2DLHy2a+/cy6suuYWdex/jVZfcwrV37l3K081bw7Hn/uvQahjFOoZ5TbrrGJWvx6jU4ffK6NWxVNdk2SLmXAFcBmyZY/x04LjOcirwGeDUJL8AXAisAQrYkeS6qvqffoue7do793LeNTt54sdPwzGw99EnOO+anQC86RWrBn26hWtgODWMbB1DuiY/UwfWMQrXZSS/FqNSxxJdkwXv6KvqVuCReaZsALbUjNuAFUmOBE4DbqqqRzrhfhOwfhBFz/aJG3b99GLt88SPn+YTN+xaitONbA3WYR0HQx2jUMNzrY5U1cKTktXA9VV14n7GrgcuqaqvddZvBj4CrAVeUFV/3tn+UeCJqvrkfo6xEdgIMD4+PjE5OXlATezc+9hPX48fBt9/4v/HXrbq5w7oWL3qrmG2XmqYnp5mbGxs6HX0ahSuyew6ZvO6+L0yyDp6Nahrsm7duh1VtWZ/Y4t5dLPkqupy4HKANWvW1Nq1aw9o//MvuYW9j858df7kZU/x1ztn2lq14jD+8O0HdqxeddfQrdcatm3bxoF+HZaijl6NwjWZXUc3r4vfK8+lazKIT93sBY7pWj+6s22u7QN3zmnHc9jyQ56x7bDlh3DOaccvxelGtgbrsI6DoY5RqOG5Vscg7uivAzYlmWTmzdjHquqhJDcAf5Hk5zvzXg+cN4Dz/Yx9b1jMPNP6IatWHMY5px3/rL6h0l3D9x59gqOGUMOo1jGsazK7jlH5eoxKHX6vjF4dS3ZNqmreBbgSeAj4MbAHeC9wNnB2ZzzAp4FvAzuBNV37vgfY3VnevdC5qoqJiYnqx9TUVF/7j4pW+qiyl1HVSi+t9FHVXy/A9pojVxe8o6+qMxcYL+ADc4xtBjYv/ONGkrRU/MtYSWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1LhFBX2S9Ul2Jdmd5Nz9jL8kyc1J7k6yLcnRXWN/leTeJPcnuTRJBtmAJGl+CwZ9kkOATwOnAycAZyY5Yda0TwJbquok4CLg4519fw14FXAScCLwK8BrB1a9JGlBi7mjPwXYXVXfqaongUlgw6w5JwC3dF5PdY0X8ALgUOD5wHLg+/0WLUlavMUE/Srgwa71PZ1t3b4JvKXz+s3AC5O8uKq+zkzwP9RZbqiq+/srWZJ0IFJV809IzgDWV9X7OuvvAE6tqk1dc44CLgOOBW4FfoeZRzUrgU8Bb+1MvQn4cFV9ddY5NgIbAcbHxycmJyd7bmh6epqxsbGe9x8VrfQB9jKqWumllT6gv17WrVu3o6rW7HewquZdgFcycye+b/084Lx55o8BezqvzwE+2jV2ATNBP+f5JiYmqh9TU1N97T8qWumjyl5GVSu9tNJHVX+9ANtrjlxdzKOb24Hjkhyb5FDgbcB13ROSrEyy71jnAZs7r/8TeG2SZUmWM/NGrI9uJOlZtGDQV9VTwCbgBmZC+ktVdW+Si5K8sTNtLbAryQPAOHBxZ/tVwLeBncw8x/9mVf3LYFuQJM1n2WImVdVWYOusbRd0vb6KmVCfvd/TwB/0WaMkqQ/+ZawkNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWqcQS9JjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY1bVNAnWZ9kV5LdSc7dz/hLktyc5O4k25Ic3TX2i0luTHJ/kvuSrB5c+ZKkhSwY9EkOAT4NnA6cAJyZ5IRZ0z4JbKmqk4CLgI93jW0BPlFVLwVOAR4eROGSpMVZzB39KcDuqvpOVT0JTAIbZs05Abil83pq33jnB8KyqroJoKqmq+rxgVQuSVqUVNX8E5IzgPVV9b7O+juAU6tqU9ecfwa+UVWfSvIW4GpgJfBq4H3Ak8CxwFeAc6vq6Vnn2AhsBBgfH5+YnJzsuaHp6WnGxsZ63n9UtNIH2MuoaqWXVvqA/npZt27djqpas9/Bqpp3Ac4A/qFr/R3AZbPmHAVcA9wJfArYA6zo7PsY8EvAMmZ+ALx3vvNNTExUP6ampvraf1S00keVvYyqVnpppY+q/noBttccubqYRzd7gWO61o/ubOv+YfG9qnpLVb0COL+z7dFO4N9VM499ngKuBU5exDklSQOymKC/HTguybFJDgXeBlzXPSHJyiT7jnUesLlr3xVJjuis/wZwX/9lS5IWa8Gg79yJbwJuAO4HvlRV9ya5KMkbO9PWAruSPACMAxd39n0a+BBwc5KdQIC/H3gXkqQ5LVvMpKraCmydte2CrtdXAVfNse9NwEl91ChJ6oN/GStJjTPoJalxBr0kNc6gl6TGGfSS1DiDXpIaZ9BLUuMMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktQ4g16SGmfQS1LjDHpJapxBL0mNM+glqXEGvSQ1zqCXpMYZ9JLUOINekhpn0EtS4wx6SWpcqmrYNTxDkv8CvtvHIVYCPxhQOcPUSh9gL6OqlV5a6QP66+UlVXXE/gZGLuj7lWR7Va0Zdh39aqUPsJdR1UovrfQBS9eLj24kqXEGvSQ1rsWgv3zYBQxIK32AvYyqVnpppQ9Yol6ae0YvSXqmFu/oJUldDHpJalxzQZ/kY0nuTnJXkhuTHDXsmnqV5BNJvtXp58tJVgy7pl4l+d0k9yb5SZKD7qNwSdYn2ZVkd5Jzh11PP5JsTvJwknuGXUs/khyTZCrJfZ1/Wx8cdk29SvKCJP+e5JudXv5soMdv7Rl9khdV1f92Xv8RcEJVnT3ksnqS5PXALVX1VJK/BKiqjwy5rJ4keSnwE+BzwIeqavuQS1q0JIcADwC/BewBbgfOrKr7hlpYj5K8BpgGtlTVicOup1dJjgSOrKo7krwQ2AG86WC8LkkCHF5V00mWA18DPlhVtw3i+M3d0e8L+Y7DgYP2J1lV3VhVT3VWbwOOHmY9/aiq+6tq17Dr6NEpwO6q+k5VPQlMAhuGXFPPqupW4JFh19Gvqnqoqu7ovP4hcD+warhV9aZmTHdWl3eWgWVXc0EPkOTiJA8CbwcuGHY9A/Ie4N+GXcRz1Crgwa71PRykgdKqJKuBVwDfGG4lvUtySJK7gIeBm6pqYL0clEGf5CtJ7tnPsgGgqs6vqmOALwKbhlvt/BbqpTPnfOApZvoZWYvpRRq0JGPA1cAfz/qN/qBSVU9X1cuZ+c39lCQDe6y2bFAHejZV1esWOfWLwFbgwiUspy8L9ZLkLOC3gd+sEX9D5QCuy8FmL3BM1/rRnW0ass7z7KuBL1bVNcOuZxCq6tEkU8B6YCBvmB+Ud/TzSXJc1+oG4FvDqqVfSdYDHwbeWFWPD7ue57DbgeOSHJvkUOBtwHVDruk5r/MG5ueB+6vqb4ZdTz+SHLHvU3VJDmPmjf+BZVeLn7q5GjiemU94fBc4u6oOyruvJLuB5wP/3dl020H8CaI3A38HHAE8CtxVVacNt6rFS/IG4G+BQ4DNVXXxkEvqWZIrgbXM/Je43wcurKrPD7WoHiT5deCrwE5mvt8B/rSqtg6vqt4kOQn4R2b+fT0P+FJVXTSw47cW9JKkZ2ru0Y0k6ZkMeklqnEEvSY0z6CWpcQa9JDXOoJekxhn0ktS4/wPoIHEJmksNjgAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["b_func = x**3\n","plt.scatter(x,b_func)\n","plt.grid()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":264},"id":"u2l98xUZkT5Y","executionInfo":{"status":"ok","timestamp":1640586484295,"user_tz":-540,"elapsed":309,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"29df5971-a462-4bc9-e5c4-587354560eac"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# 비선형 SVM => 예제 : make_moons\n","from sklearn.datasets import make_moons\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.svm import LinearSVC\n","\n","# 샘플 수 1000개, noise = 0.1, random_state=2021\n","x,y = make_moons(n_samples=1000, noise=0.1, random_state=2021)\n","\n","# 변수 변화 : polynomial 3차 다항식, scaler : standard scaler model: linear SVC\n","polynomial_std_svm = Pipeline([\n","                               (\"polynomial\", PolynomialFeatures(degree=3)),\n","                               ('std',StandardScaler()),\n","                               ('svm', LinearSVC(C=10, loss='hinge'))\n","])\n","polynomial_std_svm.fit(x,y)\n","\n","# 예측\n","\n","new_moon = [[2.0, 1.0]]\n","print(polynomial_std_svm.predict(new_moon))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bLANIqTHkwT9","executionInfo":{"status":"ok","timestamp":1640586802501,"user_tz":-540,"elapsed":2,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"4408752c-1c4f-44c7-b3f9-32ee2bf3d8c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[1]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/svm/_base.py:1208: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  ConvergenceWarning,\n"]}]},{"cell_type":"code","source":["# kernel trick\n","from sklearn.svm import SVC\n","# C는 모델 복잡도를 낮추는 하이퍼파라미터\n","# coef 고차항에 영향을 줄일 수 있는지 모델이 높은 차수와 낮은 차수에 얼마나 영향을 받는지를 조절하는\n","poly_kernel_std_svm = Pipeline([\n","                                ('std',StandardScaler()), \n","                                ('poly_kernel_svm', SVC(kernel='poly', degree=3, coef0=1, C=5))\n","])\n","poly_kernel_std_svm.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"drmrDwsvlSdr","executionInfo":{"status":"ok","timestamp":1640588018367,"user_tz":-540,"elapsed":4,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"67c7bd66-a6d4-4b5f-867e-84a557a1d34b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('std', StandardScaler()),\n","                ('poly_kernel_svm', SVC(C=5, coef0=1, kernel='poly'))])"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# SVM 가우시안 RBF 커널\n","# 감마 값은 규제의 역할\n","# 모델이 너무 과적합되면 감마 값을 줄이고 과소적합되면 감마 값을 증가\n","# C도 감마와 비슷한 데 모델 복잡도를 조절하기 위한 하이퍼파리미터\n","rbf_kernel_std_svm = Pipeline([\n","                               ('std',StandardScaler()),\n","                               ('rbf_kernel_svm',SVC(kernel='rbf', gamma=3, C=0.0001))\n","])\n","rbf_kernel_std_svm.fit(x,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tRxX7DsyqoAl","executionInfo":{"status":"ok","timestamp":1640588391287,"user_tz":-540,"elapsed":294,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"c9784496-82c7-4920-b359-e1a971f5e6b9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('std', StandardScaler()),\n","                ('rbf_kernel_svm', SVC(C=0.0001, gamma=3))])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["from functools import reduce\n","T=int(input())\n","for i in range(T):\n","    n = int(input())\n","    if n==0:\n","        print(0)\n","        continue\n","    clothes = {}\n","    for i in range(n):\n","        a, b = input().split()\n","        if b in clothes:\n","            clothes[b]+=1\n","        else:\n","            clothes[b]=1\n","    nums= []\n","    for item in clothes:\n","        nums.append(clothes[item])\n","    if len(nums)==1:\n","        print(nums[0])\n","    else:\n","        ans = reduce(lambda x, y: (x+1)*(y+1), nums)\n","        print(ans-1)\n","        \n","    \n","        \n","        \n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kUyXtQPbXtaf","executionInfo":{"status":"ok","timestamp":1645599481522,"user_tz":-540,"elapsed":11592,"user":{"displayName":"조이준","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"18430695341039920489"}},"outputId":"8faa2058-c556-478f-e6c4-60454454c811"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["1\n","0\n","0\n"]}]},{"cell_type":"code","source":[""],"metadata":{"id":"oGiWHwQiXt-G"},"execution_count":null,"outputs":[]}]}